name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    # Generate lock files first to ensure they exist
    - name: Generate package-lock.json files
      run: |
        # Create package-lock.json in the root
        npm install --package-lock-only --no-fund
        # Create package-lock.json in mcp-service
        cd mcp-service && npm install --package-lock-only --no-fund
        cd ..
        # Create package-lock.json in crawl4ai-service
        cd crawl4ai-service && npm install --package-lock-only --no-fund
        cd ..
    
    # Setup Node.js with specific caching paths
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          mcp-service/package-lock.json
          crawl4ai-service/package-lock.json
    
    # Install dependencies separately for each project
    - name: Install root dependencies
      run: npm ci || npm install
    
    - name: Install dependencies for MCP service
      working-directory: ./mcp-service
      run: |
        npm ci || npm install
        # Ensure all required type declarations are installed
        npm install --save-dev @types/express @types/node @types/node-fetch @types/cors
        # Check if modules without explicit @types packages need type declarations
        npx typesync
        npm install
    
    - name: Install dependencies for crawl4ai-service
      working-directory: ./crawl4ai-service
      run: |
        npm ci || npm install
        npm install --save-dev @types/express @types/node @types/cors
    
    # Build the projects
    - name: Build MCP service
      working-directory: ./mcp-service
      run: npm run build
    
    - name: Build crawl4ai-service
      working-directory: ./crawl4ai-service
      run: npm run build
    
    - name: Check for linting and formatting issues
      working-directory: ./mcp-service
      run: npm run lint || echo "Linting step skipped, add a lint script to package.json to enable"
    
    # Run tests
    - name: Run tests
      run: npm run test:all || echo "Test step skipped, add test scripts to package.json files to enable"